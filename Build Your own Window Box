from tkinter import *
from tkinter import ttk, messagebox

### Code in first section is for the frame & scroll_bar ###

root = Tk()
root.title("Bryan's Test Window")
root.option_add('*tearOFF', FALSE)
content = ttk.Frame(root, padding=(5,5,12,12))
frame = ttk.Frame(content, borderwidth=5, relief='ridge')
l = Listbox(root, width=50, height=30)
l.grid(column=0, row=0, sticky=(N,W,E,S))
s = ttk.Scrollbar(root, orient=VERTICAL, command=l.yview)
s.grid(column=1, row=0, sticky=(N,S))
l['yscrollcommand'] = s.set

ttk.Label(root, text="Status message here", anchor = (W)).grid(column=0, columnspan=2, row=1, sticky=(W,E))
root.grid_columnconfigure(0, weight = 1)
root.grid_rowconfigure(0, weight = 1)
for i in range(1, 101):
    l.insert('end', 'Line %d of 100' % i)
    
    
########## Code below is for the Menu Bar ############

ttk.Entry(root).grid()
m = Menu(root)
root.option_add('*tearOFF', FALSE)
m_edit = Menu(m)
m.add_cascade(menu=m_edit, label="Edit")
m_edit.add_command(label="Paste", command=lambda: root.focus_get().event_generate("<<Paste>>"))
m_edit.add_command(label="Find...", command=lambda: root.event_generate("<<OpenFindDialog>>"))
m_edit.add_command(label="Testing1", command=lambda: root.focus_get().event_generate("<<Testing1>>"))

m_file = Menu(m)
root.option_add('*tearOFF', FALSE)
m.add_cascade(menu=m_file, label="File")
m_file.add_command(label="Open", command=lambda: root.focus_get().event_generate("<<Open>>"))
m_file.add_command(label="Save As...", command=lambda: root.event_generate("<<Save As...>>"))
m_file.add_command(label="Testing2", command=lambda: root.focus_get().event_generate("<<Testing2>>"))

m_view = Menu(m)
root.option_add('*tearOFF', FALSE)
m.add_cascade(menu=m_view, label="View")
m_view.add_command(label="Explorer", command=lambda: root.focus_get().event_generate("<<Explorer>>"))
m_view.add_command(label="Testing", command=lambda: root.event_generate("<<Testing>>"))
m_view.add_command(label="Testing3", command=lambda: root.focus_get().event_generate("<<Testing3>>"))

m_help = Menu(m)
root.option_add('*tearOFF', FALSE)
m.add_cascade(menu=m_help, label="Help")
m_help.add_command(label="Welcome", command=lambda: root.focus_get().event_generate("<<Welcome>>"))
m_help.add_command(label="About", command=lambda: root.event_generate("<<About>>"))
m_help.add_command(label="Testing4", command=lambda: root.focus_get().event_generate("<<Testing4>>"))
# line of code below needs to be added at the end of all the tabs. 
# not for each one. If you add for each one the program will end after the first tab
root['menu'] =m




# define functions for each tab on the menubar and add content
# use the example below as a template

def launchAbout(*args):
    messagebox.showinfo(message="This section is about my newly created window!")

def launchTesting(*args):
    messagebox.showinfo(message="Testing that this text is outputted!")

def launchSaveAs(*args):
    messagebox.showinfo(message="What do you want to save your fle as?")
    
def launchFindDialog(*args):
    messagebox.showinfo(message="I hope you find what you're looking for!")    

root.bind("<<About>>", launchAbout)
root.bind("<<Save As...>>", launchSaveAs)
root.bind("<<OpenFindDialog>>", launchFindDialog)
root.bind("<<Testing>>", launchTesting)
root.mainloop()
