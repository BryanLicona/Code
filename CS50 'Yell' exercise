# def main():
#     yell("This is CS50")
    
    
# def yell(phrase):
#     print(phrase.upper())
    
    
# if __name__ == "__main__":
#     main()


###### 
# the above example is a basic function to just upper all 
# words
# the example below is to take in information and convert
# new way to append words and convert to upper case
# def main():
#     yell(["This", "is", "CS50"])
    
    
# def yell(words):
#     uppercased = []
#     for word in words:
#         uppercased.append(word.upper())
#     print(uppercased)
    
    
# if __name__ == "__main__":
#     main()
    
# the example below is the same function above but 
# using the unpack method
# by adding a single * 
# def main():
#     yell(["This", "is", "CS50"])
    
    
# def yell(words):
#     uppercased = []
#     for word in words:
#         uppercased.append(word.upper())
#     print(*uppercased)
    
    
# if __name__ == "__main__":
#     main()

### an example to make the function better

# def main():
#     yell("This", "is", "CS50")
    
#     # adding * below
# def yell(*words):
#     uppercased = []
#     for word in words:
#         uppercased.append(word.upper())
#     print(*uppercased)
    
    
# if __name__ == "__main__":
#     main()

########## using 'map'

# def main():
#     yell("This", "is", "CS50")
    
#     # adding * below
# def yell(*words):
#     uppercased = map(str.upper, words)
#     print(*uppercased)
    
    
# if __name__ == "__main__":
#     main()


###########
# list comprehension

def main():
    yell("This", "is", "CS50")
    
    # below is a list comprehension []
    # a loop within the []
    # can also add conditionals
def yell(*words):
    uppercased = [word.upper() for word in words]
    
    print(*uppercased)
    
    
if __name__ == "__main__":
    main()
